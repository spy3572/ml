import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
from sklearn import tree

# Load the dataset
file_path = "/content/iris.csv"
df = pd.read_csv(file_path)

# Display first few rows to understand the structure
print(df.head())

# Assuming the last column is the target and others are features
X = df.iloc[:, :-1]  # Features
y = df.iloc[:, -1]   # Target

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Decision Tree model
model = DecisionTreeClassifier()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')

# Visualize the Decision Tree
plt.figure(figsize=(12, 8))
# Convert class names to a list of strings
class_names = [str(name) for name in y.unique()]
tree.plot_tree(model, feature_names=X.columns, class_names=class_names, filled=True) # Pass the list of class names
plt.show()
